1) List all the columns of the Salespeople table.

mysql> SELECT * FROM salespeople;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+

2) List all customers with a rating of 100.

mysql> SELECT * FROM customers WHERE RATING=100;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | Rating | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+

3) Find the largest order taken by each salesperson on each date.

mysql> SELECT SNAME, ODATE, ONUM, AMT
    -> FROM salespeople, orders
    -> WHERE salespeople.SNUM = orders.SNUM
    -> AND AMT IN (SELECT MAX(AMT) FROM orders GROUP BY ODATE);
+---------+------------+------+---------+
| SNAME   | ODATE      | ONUM | AMT     |
+---------+------------+------+---------+
| Serres  | 1990-03-10 | 3005 | 5160.45 |
| Peel    | 1990-05-10 | 3008 |    4723 |
| AxelRod | 1990-04-10 | 3009 | 1713.23 |
| Peel    | 1990-06-10 | 3011 | 9891.88 |
+---------+------------+------+---------+

4) Arrange the Order table by descending customer number.

mysql> SELECT * FROM orders
    -> ORDER BY CNUM DESC;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
+------+---------+------------+------+------+

5) Find which salespeople currently have orders in the order table.

mysql> SELECT orders.SNUM,salespeople.SNAME FROM orders,salespeople
    -> WHERE orders.SNUM = salespeople.SNUM
    -> GROUP BY SNUM
    -> ORDER BY SNUM;
+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1001 | Peel    |
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+

6) List names of all customers matched with the salespeople serving them.

mysql> SELECT CNAME AS "Customer's Name", salespeople.SNAME AS "Serving By" FROM customers, salespeople
    -> WHERE customers.SNUM = salespeople.SNUM;
+-----------------+------------+
| Customer's Name | Serving By |
+-----------------+------------+
| Hoffman         | Peel       |
| Giovanni        | AxelRod    |
| Lui             | Serres     |
| Grass           | Serres     |
| Clemens         | Peel       |
| Pereira         | Motika     |
| Cisneros        | Rifkin     |
+-----------------+------------+

7) Find the names and numbers of all salespeople who have more than one customer.

mysql> SELECT SNUM,SNAME FROM salespeople
    -> WHERE 1<(SELECT COUNT(*) FROM customers
    ->          WHERE salespeople.SNUM = SNUM);
+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+

8) Count the orders of each of the salespeople and output the results in descending order.

mysql> SELECT salespeople.SNUM, salespeople.SNAME,COUNT(orders.ONUM) AS No_of_Orders
    -> FROM salespeople,orders
    -> WHERE salespeople.SNUM = orders.SNUM
    -> GROUP BY SNUM
    -> ORDER BY No_of_Orders DESC;
+------+---------+--------------+
| SNUM | SNAME   | No_of_Orders |
+------+---------+--------------+
| 1001 | Peel    |            3 |
| 1002 | Serres  |            3 |
| 1007 | Rifkin  |            2 |
| 1004 | Motika  |            1 |
| 1003 | AxelRod |            1 |
+------+---------+--------------+

9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose.

mysql> SELECT * FROM customers
    -> WHERE (SELECT COUNT(CITY) FROM customers
    ->          WHERE CITY = "SanJose")>=1;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Lui      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

10) Match salespeople to customers according to what city they live in.

mysql> SELECT salespeople.SNAME,customers.CNAME,customers.CITY
    -> FROM salespeople,customers
    -> WHERE customers.CITY = salespeople.CITY;
+--------+----------+---------+
| SNAME  | CNAME    | CITY    |
+--------+----------+---------+
| Fran   | Hoffman  | London  |
| Motika | Hoffman  | London  |
| Peel   | Hoffman  | London  |
| Serres | Lui      | SanJose |
| Fran   | Clemens  | London  |
| Motika | Clemens  | London  |
| Peel   | Clemens  | London  |
| Serres | Cisneros | SanJose |
+--------+----------+---------+

11) Find all the customers in SanJose who have a rating above 200.

mysql> SELECT * FROM customers
    -> WHERE CITY = "SanJose"
    -> AND RATING>200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

12) List the names and commissions of all salespeople in London.

mysql> SELECT SNAME,COMM FROM salespeople
    -> WHERE CITY = "London";
+--------+------+
| SNAME  | COMM |
+--------+------+
| Peel   |   12 |
| Motika |   11 |
| Fran   |   25 |
+--------+------+

13) List all the orders of Salesperson Motika from the orders table.

mysql> SELECT * FROM orders
    -> WHERE SNUM = 1004;
+------+--------+------------+------+------+
| ONUM | AMT    | ODATE      | CNUM | SNUM |
+------+--------+------------+------+------+
| 3002 | 1900.1 | 1990-03-10 | 2007 | 1004 |
+------+--------+------------+------+------+

14) Find all customers who booked orders on October 3.

mysql> SELECT * FROM customers
    -> WHERE CNUM IN (SELECT CNUM FROM orders
    ->                  WHERE ODATE = "1990-03-10");
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2003 | Lui      | SanJose |    200 | 1002 |
+------+----------+---------+--------+------+

15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where 
	the SUM was not at least 2000 above the maximum Amount

mysql> SELECT ODATE,TOTAL
    -> FROM (SELECT ODATE,SUM(AMT) AS TOTAL
    ->          FROM orders
    ->          GROUP BY ODATE) AS a
    -> WHERE TOTAL >= (SELECT MAX(AMT)+2000
    ->                          FROM orders);
Empty set (0.00 sec)

16) Select all orders that had amounts that were greater than at least one of the orders from October 6.

mysql> SELECT * FROM orders
    -> WHERE AMT > ANY (SELECT AMT FROM orders
    ->                  WHERE ODATE = "1990-06-10");
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.

mysql> SELECT * FROM salespeople
    -> WHERE EXISTS (SELECT * FROM customers
    ->                  WHERE RATING = 300
    ->                  AND salespeople.SNUM = customers.SNUM);
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+

18) Find all customers whose cnum is 1000 above the snum of Serres

mysql> SELECT * FROM customers
    -> WHERE CNUM > (SELECT SNUM+1000 FROM salespeople
    ->                  WHERE SNUM = 1002);
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2003 | Lui      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

19) Give the salespeopleâ€™s commissions as percentages instead of decimal numbers.

mysql> SELECT SNUM,SNAME,CONVERT(COMM,char)+'%' AS COMMISSION
    -> FROM salespeople;
+------+---------+------------+
| SNUM | SNAME   | COMMISSION |
+------+---------+------------+
| 1001 | Peel    |         12 |
| 1002 | Serres  |         13 |
| 1003 | AxelRod |         10 |
| 1004 | Motika  |         11 |
| 1007 | Rifkin  |         15 |
| 1008 | Fran    |         25 |
+------+---------+------------+

20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000.

mysql> SELECT SNAME, ODATE, ONUM, AMT
    -> FROM salespeople, orders
    -> WHERE salespeople.SNUM = orders.SNUM
    -> AND AMT IN (SELECT MAX(AMT) FROM orders GROUP BY ODATE)
    -> AND AMT >= 3000;
+--------+------------+------+---------+
| SNAME  | ODATE      | ONUM | AMT     |
+--------+------------+------+---------+
| Serres | 1990-03-10 | 3005 | 5160.45 |
| Peel   | 1990-05-10 | 3008 |    4723 |
| Peel   | 1990-06-10 | 3011 | 9891.88 |
+--------+------------+------+---------+

21) List all the largest orders for October 3, for each salesperson.

mysql> SELECT salespeople.SNUM, SNAME, ONUM, MAX(AMT) AS MX_AMT, ODATE
    -> FROM orders,salespeople
    -> WHERE salespeople.SNUM = orders.SNUM
    -> AND ODATE = "1990-03-10"
    -> GROUP BY orders.SNUM;
+------+--------+------+---------+------------+
| SNUM | SNAME  | ONUM | MX_AMT  | ODATE      |
+------+--------+------+---------+------------+
| 1007 | Rifkin | 3001 | 1098.16 | 1990-03-10 |
| 1004 | Motika | 3002 |  1900.1 | 1990-03-10 |
| 1001 | Peel   | 3003 |  767.19 | 1990-03-10 |
| 1002 | Serres | 3005 | 5160.45 | 1990-03-10 |
+------+--------+------+---------+------------+

22) Find all customers located in cities where Serres has customers.

mysql> SELECT * FROM customers
    -> WHERE CITY = ANY(SELECT CITY FROM customers
    ->                   WHERE SNUM = 1002);
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2003 | Lui      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

23) Select all customers with a rating above 200.

mysql> SELECT * FROM customers
    -> WHERE RATING > 200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

24) Count the number of salespeople currently having orders in the orders table.

mysql> SELECT COUNT(DISTINCT SNUM) AS COUNT_sp FROM orders;
+----------+
| COUNT_sp |
+----------+
|        5 |
+----------+

25) Write a query that produces all customers serviced by salespeople with a commission above 12%. 
    Output the customerâ€™s name, salespersonâ€™s name and the salespersonâ€™s rate of commission.

mysql> SELECT CNAME, SNAME, COMM
    -> FROM customers, salespeople
    -> WHERE salespeople.SNUM = customers.SNUM
    -> AND COMM > '12';
+----------+--------+------+
| CNAME    | SNAME  | COMM |
+----------+--------+------+
| Lui      | Serres |   13 |
| Grass    | Serres |   13 |
| Cisneros | Rifkin |   15 |
+----------+--------+------+

26) Find salespeople who have multiple customers.

mysql> SELECT * FROM salespeople
    -> WHERE 1 < ANY(SELECT COUNT(*)
    ->          FROM customers
    ->          WHERE salespeople.SNUM = customers.SNUM
    ->          GROUP BY customers.SNUM);
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+

27) Find salespeople with customers located in their own cities.

mysql> SELECT SNAME,CNAME, salespeople.CITY
    -> FROM salespeople, customers
    -> WHERE salespeople.CITY = CUSTOMERS.CITY
    -> AND salespeople.SNUM = CUSTOMERS.SNUM;
+--------+---------+---------+
| SNAME  | CNAME   | CITY    |
+--------+---------+---------+
| Peel   | Hoffman | London  |
| Serres | Lui     | SanJose |
| Peel   | Clemens | London  |
+--------+---------+---------+

28) Find all salespeople whose name starts with â€˜Pâ€™ and fourth character is â€˜Iâ€™.

mysql> SELECT * FROM salespeople
    -> WHERE SNAME LIKE "P__I";
Empty set (0.00 sec)

29) Write a query that uses a subquery to obtain all orders for the customer named â€˜Cisnerosâ€™. 
    Assume you do not know his customer number.

mysql> SELECT * FROM orders
    -> WHERE CNUM = (SELECT CNUM
    ->                  FROM customers
    ->                  WHERE CNAME = 'Cisneros');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
+------+---------+------------+------+------+

30) Find the largest orders for Serres and Rifkin.

mysql> SELECT MAX(AMT) AS Largest, SNUM FROM orders
    -> WHERE SNUM = 1002
    -> OR SNUM = 1007
    -> GROUP BY SNUM;
+---------+------+
| Largest | SNUM |
+---------+------+
| 1098.16 | 1007 |
| 5160.45 | 1002 |
+---------+------+

31) Sort the salespeople table in the following order: snum, sname, commission, city.

mysql> SELECT SNUM, SNAME, COMM, CITY
    -> FROM salespeople;
+------+---------+------+-----------+
| SNUM | SNAME   | COMM | CITY      |
+------+---------+------+-----------+
| 1001 | Peel    |   12 | London    |
| 1002 | Serres  |   13 | SanJose   |
| 1003 | AxelRod |   10 | New York  |
| 1004 | Motika  |   11 | London    |
| 1007 | Rifkin  |   15 | Barcelona |
| 1008 | Fran    |   25 | London    |
+------+---------+------+-----------+

32) Select all customers whose names fall in between â€˜Aâ€™ and â€˜Gâ€™ alphabetical range.

mysql> SELECT * FROM customers
    -> WHERE CNAME BETWEEN 'A%' AND 'G%';
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

33) Select all the possible combinations of customers you can assign.

mysql> SELECT C1.CNAME,C2.CNAME
    -> FROM customers C1,customers C2
    -> WHERE C1.SNUM = C2.SNUM
    -> AND C1.CNUM != C2.CNUM;
+---------+---------+
| CNAME   | CNAME   |
+---------+---------+
| Clemens | Hoffman |
| Grass   | Lui     |
| Lui     | Grass   |
| Hoffman | Clemens |
+---------+---------+

34) Select all orders that are greater than the average for October 4.

mysql> SELECT * FROM orders
    -> WHERE  AMT > (SELECT AVG(AMT) FROM orders
    ->                  WHERE ODATE = "1990-04-10");
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

35) Write a select command using correlated subquery that selects the names and 
    numbers of all customers with ratings equal to the maximum for their city

mysql> SELECT CNUM,CNAME,RATING,CITY
    -> FROM customers C1
    -> WHERE RATING IN (SELECT MAX(RATING)
    ->                  FROM customers C2
    ->                  WHERE C1.CITY = C2.CITY);
+------+----------+--------+---------+
| CNUM | CNAME    | RATING | CITY    |
+------+----------+--------+---------+
| 2001 | Hoffman  |    100 | London  |
| 2002 | Giovanni |    200 | Rome    |
| 2004 | Grass    |    300 | Berlin  |
| 2006 | Clemens  |    100 | London  |
| 2008 | Cisneros |    300 | SanJose |
+------+----------+--------+---------+

36) Write a query that totals the orders for each day and places the results in descending order.

mysql> SELECT SUM(AMT) AS TOTAL, ODATE
    -> FROM orders
    -> GROUP BY ODATE
    -> ORDER BY SUM(AMT) DESC;
+--------------------+------------+
| TOTAL              | ODATE      |
+--------------------+------------+
| 11201.829833984375 | 1990-06-10 |
|  8944.590208053589 | 1990-03-10 |
|               4723 | 1990-05-10 |
|   1788.97998046875 | 1990-04-10 |
+--------------------+------------+

37) Write a select command that produces the rating followed by the name of each customer in SanJose.

mysql> SELECT RATING, CNAME
    -> FROM customers
    -> WHERE CITY = 'SanJose';
+--------+----------+
| RATING | CNAME    |
+--------+----------+
|    200 | Lui      |
|    300 | Cisneros |
+--------+----------+

38) Find all orders with amounts smaller than any amount for a customer in SanJose.

mysql> SELECT * FROM orders
    -> WHERE AMT < ANY(SELECT AMT FROM orders
    ->                  WHERE CNUM IN (SELECT CNUM FROM customers
    ->                                  WHERE CITY = 'SanJose'));
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
+------+---------+------------+------+------+

39) Find all orders with above average amounts for their customers.

mysql> SELECT * FROM orders
    -> WHERE AMT > (SELECT AVG(AMT)
    ->              FROM orders);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

40) Write a query that selects the highest rating in each city.

mysql> SELECT MAX(RATING) AS 'HIGHEST RATING', CITY
    -> FROM customers
    -> GROUP BY CITY;
+----------------+---------+
| HIGHEST RATING | CITY    |
+----------------+---------+
|            100 | London  |
|            200 | Rome    |
|            300 | SanJose |
|            300 | Berlin  |
+----------------+---------+

41) Write a query that calculates the amount of the salespersonâ€™s commission on each order by a customer with a rating above 100.00.

mysql> SELECT SNAME,COMM AS 'COMMISSION IN %', AMT AS AMOUNT,
    -> (AMT/100)*COMM AS COMMISSION, ONUM
    -> FROM orders, salespeople
    -> WHERE CNUM IN (SELECT CNUM FROM customers
    ->                  WHERE RATING > 100)
    -> AND orders.SNUM = salespeople.SNUM;
+---------+-----------------+---------+--------------------+------+
| SNAME   | COMMISSION IN % | AMOUNT  | COMMISSION         | ONUM |
+---------+-----------------+---------+--------------------+------+
| Rifkin  |              15 |   18.69 | 2.8035000801086425 | 3001 |
| Serres  |              13 | 5160.45 |   670.858525390625 | 3005 |
| Rifkin  |              15 | 1098.16 | 164.72400512695313 | 3006 |
| Serres  |              13 |   75.75 |             9.8475 | 3007 |
| AxelRod |              10 | 1713.23 |   171.322998046875 | 3009 |
| Serres  |              13 | 1309.95 | 170.29349365234376 | 3010 |
+---------+-----------------+---------+--------------------+------+

42) Count the customers with ratings above SanJoseâ€™s average.

mysql> SELECT COUNT(*) AS 'No of Customer with Rating above SanJoseâ€™s AVG'
    ->  FROM customers
    -> WHERE RATING > (SELECT AVG(RATING) FROM customers
    ->                  WHERE CITY = 'SanJose');
+------------------------------------------------+
| No of Customer with Rating above SanJoseâ€™s AVG |
+------------------------------------------------+
|                                              2 |
+------------------------------------------------+

43) Find all salespeople that are located in either Barcelona or London.

mysql> SELECT * FROM salespeople
    -> WHERE CITY = 'Barcelona'
    -> OR CITY = 'London';
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1004 | Motika | London    |   11 |
| 1007 | Rifkin | Barcelona |   15 |
| 1008 | Fran   | London    |   25 |
+------+--------+-----------+------+

44) Find all salespeople with only one customer.

mysql> SELECT * FROM salespeople
    -> WHERE 1 IN (SELECT COUNT(*) FROM customers
    ->          WHERE salespeople.SNUM = SNUM
    ->          GROUP BY SNUM);
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
+------+---------+-----------+------+

45) Write a query that joins the Customer table to itself to 
    find all pairs or customers served by a single salesperson.

mysql> SELECT C1.CNAME, C2.CNAME
    -> FROM customers C1 JOIN customers C2
    -> ON C1.SNUM = C2.SNUM
    -> AND C1.CNUM != C2.CNUM;
+---------+---------+
| CNAME   | CNAME   |
+---------+---------+
| Clemens | Hoffman |
| Grass   | Lui     |
| Lui     | Grass   |
| Hoffman | Clemens |
+---------+---------+

46) Write a query that will give you all orders for more than $1000.00.

mysql> SELECT * FROM orders
    -> WHERE AMT > 1000.00;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

47) Write a query that lists each order number followed by the name of the customer who made that order.

mysql> SELECT ONUM,CNAME
    -> FROM orders JOIN customers
    -> ON orders.CNUM = customers.CNUM;
+------+----------+
| ONUM | CNAME    |
+------+----------+
| 3001 | Cisneros |
| 3002 | Pereira  |
| 3003 | Hoffman  |
| 3005 | Lui      |
| 3006 | Cisneros |
| 3007 | Grass    |
| 3008 | Clemens  |
| 3009 | Giovanni |
| 3010 | Grass    |
| 3011 | Clemens  |
+------+----------+

48) Write a query that selects all the customers whose ratings are equal to 
    or greater than ANY(in the SQL sense) of â€˜Serresâ€™.

mysql> SELECT * FROM customers
    -> WHERE RATING >= ANY(SELECT RATING FROM customers
    ->                     WHERE SNUM IN (SELECT SNUM FROM salespeople
    ->                                    WHERE SNAME = 'Serres'));
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Lui      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

49) Write two queries that will produce all orders taken on October 3 or October 4.

mysql> SELECT * FROM orders
    -> WHERE ODATE = "1990-03-10";
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
+------+---------+------------+------+------+

mysql> SELECT * FROM orders
    -> WHERE ODATE = "1990-04-10";
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
+------+---------+------------+------+------+

50) Find only those customers whose ratings are higher than every customer in Rome.

mysql> SELECT * FROM customers
    -> WHERE RATING > ALL(SELECT RATING FROM customers
    ->                    WHERE CITY = "Rome");
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

51) Write a query on the Customers table whose output will exclude all customers 
    with a rating<= 100.00, unless they are located in Rome.

mysql> SELECT * FROM customers
    -> WHERE RATING NOT IN(SELECT RATING FROM customers
    ->                     WHERE RATING <= 100)
    -> OR CITY = 'Rome';
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Lui      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

52) Find all rows from the customerâ€™s table for which the salesperson number is 1001.

mysql> SELECT * FROM customers
    -> WHERE SNUM = 1001;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | Rating | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+

53) Find the total amount in orders for each salesperson where their total of amounts are
    greater than the amount of the largest order in the table.

mysql> SELECT Total,SNUM FROM
    -> (SELECT SUM(AMT) AS TOTAL,SNUM FROM orders GROUP BY SNUM) AS O
    -> WHERE Total > (SELECT MAX(AMT) FROM orders);
+--------------------+------+
| Total              | SNUM |
+--------------------+------+
| 15382.069885253906 | 1001 |
+--------------------+------+

54) Write a query that selects all orders save those with zeroes or NULL in the amount file.

mysql> SELECT * FROM orders
    -> WHERE AMT = 0 OR NULL;
Empty set (0.00 sec)

55) Produce all combinations of salespeople and customer names such that the former precedes 
    the latter alphabetically, and the latter has a rating of less than 200.

    -> didnot understand what to do.

56) Find all salespeople name and commission.

mysql> SELECT SNAME,COMM
    -> FROM salespeople;
+---------+------+
| SNAME   | COMM |
+---------+------+
| Peel    |   12 |
| Serres  |   13 |
| AxelRod |   10 |
| Motika  |   11 |
| Rifkin  |   15 |
| Fran    |   25 |
+---------+------+

57) Write a query that produces the names and cities of all customers with the same rating as Hoffman. 
    Write the query using Hoffmanâ€™s cnum rather than his rating, so that it would still be usable if his rating is changed.

mysql> SELECT CNAME,CITY FROM customers
    -> WHERE RATING IN (SELECT RATING FROM customers
    ->                  WHERE CNUM = 2001);
+---------+--------+
| CNAME   | CITY   |
+---------+--------+
| Hoffman | London |
| Clemens | London |
| Pereira | Rome   |
+---------+--------+

58) Find all salespeople for whom there are customers that follow them in alphabetical order.

mysql> SELECT SNAME,CNAME
    -> FROM salespeople, customers
    -> WHERE salespeople.SNUM = customers.SNUM
    -> ORDER BY CNAME;
+---------+----------+
| SNAME   | CNAME    |
+---------+----------+
| Rifkin  | Cisneros |
| Peel    | Clemens  |
| AxelRod | Giovanni |
| Serres  | Grass    |
| Peel    | Hoffman  |
| Serres  | Lui      |
| Motika  | Pereira  |
+---------+----------+

59) Write a query that produces the names and ratings of all customers who have average orders.

mysql> SELECT CNAME,RATING FROM customers
    -> WHERE CNUM = (SELECT CNUM FROM orders
    ->              WHERE AMT IN (SELECT AVG(AMT) FROM orders));
Empty set (0.00 sec)

60) Find the SUM of all Amounts from the orders table.

mysql> SELECT SUM(AMT) FROM orders;
+--------------------+
| SUM(AMT)           |
+--------------------+
| 26658.400022506714 |
+--------------------+

61) Write a SELECT command that produces the order number, amount, and the date from rows in the order table.

mysql> SELECT ONUM, AMT, ODATE
    -> FROM orders;
+------+---------+------------+
| ONUM | AMT     | ODATE      |
+------+---------+------------+
| 3001 |   18.69 | 1990-03-10 |
| 3002 |  1900.1 | 1990-03-10 |
| 3003 |  767.19 | 1990-03-10 |
| 3005 | 5160.45 | 1990-03-10 |
| 3006 | 1098.16 | 1990-03-10 |
| 3007 |   75.75 | 1990-04-10 |
| 3008 |    4723 | 1990-05-10 |
| 3009 | 1713.23 | 1990-04-10 |
| 3010 | 1309.95 | 1990-06-10 |
| 3011 | 9891.88 | 1990-06-10 |
+------+---------+------------+

62) Count the number of non NULL rating fields in the Customers table (including repeats).

mysql> SELECT COUNT(RATING) FROM customers
    -> WHERE RATING != 0 OR NULL;
+---------------+
| COUNT(RATING) |
+---------------+
|             7 |
+---------------+

63) Write a query that gives the names of both the salesperson and the customer for each order after the order number.

mysql> SELECT ONUM, CNAME, SNAME
    -> FROM orders,customers,salespeople
    -> WHERE customers.CNUM = orders.CNUM
    -> AND salespeople.SNUM = orders.SNUM;
+------+----------+---------+
| ONUM | CNAME    | SNAME   |
+------+----------+---------+
| 3001 | Cisneros | Rifkin  |
| 3002 | Pereira  | Motika  |
| 3003 | Hoffman  | Peel    |
| 3005 | Lui      | Serres  |
| 3006 | Cisneros | Rifkin  |
| 3007 | Grass    | Serres  |
| 3008 | Clemens  | Peel    |
| 3009 | Giovanni | AxelRod |
| 3010 | Grass    | Serres  |
| 3011 | Clemens  | Peel    |
+------+----------+---------+

64) List the commissions of all salespeople servicing customers in London

mysql> SELECT SNUM, COMM FROM salespeople
    -> WHERE SNUM IN (SELECT SNUM FROM customers
    ->               WHERE CITY = "London");
+------+------+
| SNUM | COMM |
+------+------+
| 1001 |   12 |
+------+------+

65) Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.

mysql> SELECT SNUM, SNAME FROM salespeople
    -> WHERE SNUM = ANY(SELECT SNUM FROM customers
    ->                  WHERE salespeople.CITY != CITY);
+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+

66) Write a query using the EXISTS operator that selects all salespeople 
    with customers located in their cities who are not assigned to them.

mysql> SELECT * FROM salespeople
    -> WHERE EXISTS(SELECT SNUM FROM customers
    ->              WHERE salespeople.CITY = CITY
    ->              AND  salespeople.SNUM != SNUM);
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1002 | Serres | SanJose |   13 |
| 1004 | Motika | London  |   11 |
| 1008 | Fran   | London  |   25 |
+------+--------+---------+------+

67) Write a query that selects all customers serviced by Peel or Motika. 
    (Hint: The snum field relates the 2 tables to one another.)

mysql> SELECT * FROM customers
    -> WHERE SNUM IN (SELECT SNUM FROM salespeople
    ->                  WHERE SNAME = "Peel"
    ->                  OR SNAME = "Motika");
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | Rating | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+

68) Count the number of salespeople registering orders for each day. 
    (If a salesperson has more than one order on a given day, he or she should be counted only once.)

mysql> SELECT COUNT(DISTINCT SNUM) AS 'No of Salespeople'
    -> FROM orders
    -> GROUP BY ODATE;
+-------------------+
| No of Salespeople |
+-------------------+
|                 4 |
|                 2 |
|                 1 |
|                 2 |
+-------------------+

69) Find all orders attributed to salespeople who live in London.

mysql> SELECT * FROM orders
    -> WHERE SNUM IN (SELECT SNUM FROM salespeople
    ->                  WHERE CITY = 'London');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

70) Find all orders by customers not located in the same cities as their salespeople.

mysql> SELECT * FROM orders
    -> WHERE CNUM IN(SELECT CNUM FROM customers
    ->               WHERE SNUM IN (SELECT SNUM
    ->                              FROM salespeople
    ->                              WHERE customers.SNUM = SNUM
    ->                              AND customers.CITY != CITY));
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
+------+---------+------------+------+------+

71) Find all salespeople who have customers with more than one current order.

mysql> SELECT * FROM salespeople
    -> WHERE SNUM IN (SELECT SNUM FROM customers
    ->                WHERE 1 < (SELECT COUNT(*) FROM orders
    ->                           WHERE customers.CNUM = CNUM));
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+

72) Write a query that extracts from the customerâ€™s table every customer assigned to a salesperson,
    who is currently having at least one another customer(besides the customer being selected) with 
    orders in the Orders Table.

mysql> SELECT * FROM customers
    -> WHERE SNUM IN(SELECT SNUM FROM orders
    ->          WHERE 1<(SELECT COUNT(DISTINCT CNUM) FROM orders
    ->                  WHERE customers.SNUM = SNUM));
+------+---------+---------+--------+------+
| CNUM | CNAME   | CITY    | Rating | SNUM |
+------+---------+---------+--------+------+
| 2001 | Hoffman | London  |    100 | 1001 |
| 2003 | Lui     | SanJose |    200 | 1002 |
| 2004 | Grass   | Berlin  |    300 | 1002 |
| 2006 | Clemens | London  |    100 | 1001 |
+------+---------+---------+--------+------+

73) Write a query on the customerâ€™s table that will find the highest rating in each city. 
    Put the output in this form: for the city (city), the highest rating is (rating).

mysql> SELECT CITY, MAX(RATING) AS RATING
    -> FROM customers
    -> GROUP BY CITY;
+---------+--------+
| CITY    | RATING |
+---------+--------+
| London  |    100 |
| Rome    |    200 |
| SanJose |    300 |
| Berlin  |    300 |
+---------+--------+

74) Write a query that will produce the snum values of all salespeople with orders, 
    having amt greater than 1000 in the Orders Table(without repeats).

mysql> SELECT SNUM FROM orders
    -> WHERE AMT>1000
    -> GROUP BY SNUM;
+------+
| SNUM |
+------+
| 1004 |
| 1002 |
| 1007 |
| 1001 |
| 1003 |
+------+

75) Write a query that lists customers in a descending order of rating. 
    Output the rating field first, followed by the customerâ€™s names and numbers.

mysql> SELECT RATING,CNAME,CNUM
    -> FROM customers
    -> ORDER BY RATING DESC;
+--------+----------+------+
| RATING | CNAME    | CNUM |
+--------+----------+------+
|    300 | Grass    | 2004 |
|    300 | Cisneros | 2008 |
|    200 | Giovanni | 2002 |
|    200 | Lui      | 2003 |
|    100 | Hoffman  | 2001 |
|    100 | Clemens  | 2006 |
|    100 | Pereira  | 2007 |
+--------+----------+------+

76) Find the average commission for salespeople in London.

mysql> SELECT AVG(COMM)
    -> FROM salespeople
    -> WHERE CITY = "London";
+-----------+
| AVG(COMM) |
+-----------+
|   16.0000 |
+-----------+

77) Find all orders credited to the same salesperson who services Hoffman.(cnum 2001).

mysql> SELECT * FROM orders
    -> WHERE SNUM IN (SELECT SNUM FROM customers
    ->                  WHERE CNUM = 2001);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

78) Find all salespeople whose commission is in between 0.10 and 0.12(both inclusive).

mysql> SELECT * FROM salespeople
    -> WHERE COMM/100 BETWEEN '0.10' AND '0.12';
+------+---------+----------+------+
| SNUM | SNAME   | CITY     | COMM |
+------+---------+----------+------+
| 1001 | Peel    | London   |   12 |
| 1003 | AxelRod | New York |   10 |
| 1004 | Motika  | London   |   11 |
+------+---------+----------+------+

79) Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.

mysql> SELECT SNAME,CITY
    -> FROM salespeople
    -> WHERE CITY = 'London'
    -> AND COMM/100 > '0.10';
+--------+--------+
| SNAME  | CITY   |
+--------+--------+
| Peel   | London |
| Motika | London |
| Fran   | London |
+--------+--------+

80) Write a query that selects each customerâ€™s smallest order.

mysql> SELECT * FROM orders
    -> WHERE AMT IN (SELECT MIN(AMT) FROM orders
    ->                  GROUP BY CNUM);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
+------+---------+------------+------+------+

81) Write a query that selects the first customer in alphabetical order whose name begins with â€˜Gâ€™.

mysql> SELECT * FROM customers
    -> WHERE CNAME LIKE 'G%' LIMIT 1;
+------+----------+------+--------+------+
| CNUM | CNAME    | CITY | Rating | SNUM |
+------+----------+------+--------+------+
| 2002 | Giovanni | Rome |    200 | 1003 |
+------+----------+------+--------+------+

82) Write a query that counts the number of different non NULL city values in the customers table.

mysql> SELECT COUNT(DISTINCT CITY) AS CITY
    -> FROM customers;
+------+
| CITY |
+------+
|    4 |
+------+

83) Find the average amount from the Orders Table.

mysql> SELECT AVG(AMT) AS AVERAGE
    -> FROM orders;
+-------------------+
| AVERAGE           |
+-------------------+
| 2665.840002250671 |
+-------------------+

84) Find all customers who are not located in SanJose and whose rating is above 200.

mysql> SELECT * FROM customers
    -> WHERE CITY != 'SanJose'
    -> AND RATING > '200';
+------+-------+--------+--------+------+
| CNUM | CNAME | CITY   | Rating | SNUM |
+------+-------+--------+--------+------+
| 2004 | Grass | Berlin |    300 | 1002 |
+------+-------+--------+--------+------+

85) Give a simpler way to write this query.
    SELECT snum, sname, city, comm FROM salespeople WHERE (comm > + 0.12 OR comm < 0.14);

mysql> SELECT * FROM salespeople;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+

86) Which salespersons attend to customers not in the city they have been assigned to?

mysql> SELECT * FROM salespeople
    -> WHERE SNUM IN (SELECT SNUM FROM customers
    ->                  WHERE salespeople.CITY != CITY
    ->                  AND salespeople.SNUM = SNUM);
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
+------+---------+-----------+------+

87) Which salespeople get commission greater than 0.11 are serving customers rated less than 250?

mysql> SELECT * FROM salespeople
    -> WHERE COMM > '11'
    -> AND SNUM IN (SELECT SNUM FROM customers
    ->                  WHERE RATING < 250
    ->                  AND salespeople.SNUM = SNUM);
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+

88) Which salespeople have been assigned to the same city but get different commission percentages?

mysql> SELECT SNUM,SNAME FROM salespeople
    -> WHERE SNUM IN (SELECT c1.SNUM FROM customers c1 JOIN customers c2
    ->                  ON c1.CITY = c2.CITY
    ->                  AND c1.SNUM != c2.SNUM);
+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+

89) Which salesperson has earned the maximum commission?

mysql> SELECT SNUM, MAX(ErCOMM) AS 'MAX EARNED COMMISSION'
    -> FROM (SELECT salespeople.SNUM, SUM(AMT)*COMM/100 AS 'ErCOMM'
    ->          FROM salespeople, orders
    ->          WHERE salespeople.SNUM = orders.SNUM
    ->          GROUP BY orders.SNUM
    ->          ORDER BY orders.SNUM) AS S;
+------+-----------------------+
| SNUM | MAX EARNED COMMISSION |
+------+-----------------------+
| 1001 |    1845.8483862304688 |
+------+-----------------------+

90) Does the customer who has placed the maximum number of orders have the maximum rating?

mysql> SELECT CNAME,RATING,COUNT(*) AS COUNT,RATING = MAX AS 'DOSE ?'
    -> FROM customers, orders,(SELECT MAX(RATING) AS MAX FROM customers) AS M
    -> WHERE 1<(SELECT COUNT(*) FROM orders
    ->          WHERE customers.CNUM = CNUM
    ->          GROUP BY CNUM)
    -> AND customers.CNUM = orders.CNUM
    -> GROUP BY orders.CNUM;
+----------+--------+-------+--------+
| CNAME    | RATING | COUNT | DOSE ? |
+----------+--------+-------+--------+
| Cisneros |    300 |     2 |      1 |
| Grass    |    300 |     2 |      1 |
| Clemens  |    100 |     2 |      0 |
+----------+--------+-------+--------+

91) List all customers in descending order of customer rating.

mysql> SELECT * FROM customers
    -> ORDER BY RATING DESC;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | Rating | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Lui      | SanJose |    200 | 1002 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+

92) On which days has Hoffman placed orders?

mysql> SELECT ODATE FROM orders
    -> WHERE CNUM IN (SELECT CNUM FROM customers
    ->                  WHERE CNAME = 'Hoffman');
+------------+
| ODATE      |
+------------+
| 1990-03-10 |
+------------+

93) Which salesmen have no orders between 10/03/1990 and 10/05/1990?

mysql> SELECT * FROM salespeople
    -> WHERE SNUM NOT IN(SELECT SNUM FROM orders
    ->                  WHERE ODATE BETWEEN '1990-03-10' AND '1990-05-10');
+------+-------+--------+------+
| SNUM | SNAME | CITY   | COMM |
+------+-------+--------+------+
| 1008 | Fran  | London |   25 |
+------+-------+--------+------+

94) How many salespersons have succeeded in getting orders?

mysql> SELECT COUNT(DISTINCT SNUM) AS 'No of Salespersons'
    -> FROM orders;
+--------------------+
| No of Salespersons |
+--------------------+
|                  5 |
+--------------------+

95) How many customers have placed orders?

mysql> SELECT COUNT(DISTINCT CNUM) AS 'No of Customers'
    -> FROM orders;
+-----------------+
| No of Customers |
+-----------------+
|               7 |
+-----------------+

96) On which date has each salesman booked an order of maximum value?

mysql> SELECT ODATE,orders.SNUM, SNAME, MAX(AMT)
    -> FROM orders, salespeople
    -> WHERE orders.SNUM = salespeople.SNUM
    -> GROUP BY SNUM;
+------------+------+---------+----------+
| ODATE      | SNUM | SNAME   | MAX(AMT) |
+------------+------+---------+----------+
| 1990-03-10 | 1007 | Rifkin  |  1098.16 |
| 1990-03-10 | 1004 | Motika  |   1900.1 |
| 1990-03-10 | 1001 | Peel    |  9891.88 |
| 1990-03-10 | 1002 | Serres  |  5160.45 |
| 1990-04-10 | 1003 | AxelRod |  1713.23 |
+------------+------+---------+----------+

97) Who is the most successful salesperson?

mysql> SELECT m.SNUM,SNAME, MAX(SUM) AS 'Maximum Earning'
    -> FROM salespeople,(SELECT SUM(AMT) AS SUM,SNUM FROM orders
    ->                          GROUP BY SNUM) AS m
    -> WHERE m.SNUM = salespeople.SNUM;
+------+-------+--------------------+
| SNUM | SNAME | Maximum Earning    |
+------+-------+--------------------+
| 1001 | Peel  | 15382.069885253906 |
+------+-------+--------------------+

98) Which customers have the same rating?

mysql> SELECT c1.CNAME,c2.CNAME
    -> FROM customers c1 JOIN customers c2
    -> ON c1.RATING = c2.RATING
    -> AND c1.CNUM != c2.CNUM;
+----------+----------+
| CNAME    | CNAME    |
+----------+----------+
| Pereira  | Hoffman  |
| Clemens  | Hoffman  |
| Lui      | Giovanni |
| Giovanni | Lui      |
| Cisneros | Grass    |
| Pereira  | Clemens  |
| Hoffman  | Clemens  |
| Clemens  | Pereira  |
| Hoffman  | Pereira  |
| Grass    | Cisneros |
+----------+----------+

99) Find all orders greater than the average for October 4th.

mysql> SELECT * FROM orders
    -> WHERE AMT > (SELECT AVG(AMT) FROM orders
    ->                  WHERE ODATE = '1990-03-10');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3008 |    4723 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

100) List all customers with ratings above Grassâ€™s average.

mysql> SELECT * FROM customers
    -> WHERE RATING > (SELECT AVG(RATING) FROM customers
    ->                  WHERE CNAME = 'Grass');
Empty set (0.00 sec)

101) Which customers have above average orders?

mysql> SELECT * FROM customers
    -> WHERE CNUM IN(SELECT CNUM FROM orders
    ->                  WHERE AMT > (SELECT AVG(AMT) FROM orders));
+------+---------+---------+--------+------+
| CNUM | CNAME   | CITY    | Rating | SNUM |
+------+---------+---------+--------+------+
| 2003 | Lui     | SanJose |    200 | 1002 |
| 2006 | Clemens | London  |    100 | 1001 |
+------+---------+---------+--------+------+

102) Select the total amount in orders for each salesperson for which 
     the total is greater than the amount of the largest order in the table.

mysql> SELECT s.SNUM,SNAME,TOTAL
    -> FROM salespeople,(SELECT SNUM,SUM(AMT) AS TOTAL FROM orders
    ->                  GROUP BY SNUM) AS s
    -> WHERE s.SNUM = salespeople.SNUM
    -> AND TOTAL > (SELECT MAX(AMT) FROM orders);
+------+-------+--------------------+
| SNUM | SNAME | TOTAL              |
+------+-------+--------------------+
| 1001 | Peel  | 15382.069885253906 |
+------+-------+--------------------+

103) Give names and numbers of all salespersons that have more than one customer?

mysql> SELECT SNUM,SNAME FROM salespeople
    ->
    -> WHERE SNUM IN (SELECT SNUM FROM customers c1
    ->                   WHERE 1<(SELECT COUNT(*) FROM customers c2
    ->                          WHERE c1.SNUM = c2.SNUM
    ->                          GROUP BY SNUM));
+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+

104) Select all salespeople by name and number who have customers in their city whom they donâ€™t service.

mysql> SELECT DISTINCT(salespeople.SNAME),salespeople.SNUM
    -> FROM salespeople,customers
    -> WHERE salespeople.CITY = customers.CITY
    -> AND salespeople.SNUM != customers.SNUM
    -> ORDER BY SNUM;
+--------+------+
| SNAME  | SNUM |
+--------+------+
| Serres | 1002 |
| Motika | 1004 |
| Fran   | 1008 |
+--------+------+

105) Does the total amount in orders by customer in Rome and London, exceed
    the commission paid to salesperson in London, and New York by more than 5 times?

mysql> SELECT TotalRL, CommLN*5 FROM
    -> (SELECT SUM(AMT) AS TotalRL FROM orders
    ->  WHERE CNUM IN(SELECT CNUM FROM customers WHERE CITY = 'London' OR CITY = 'Rome')) AS t,
    -> (SELECT SUM(CommissionLN) AS CommLN FROM
    ->  (SELECT (SUM/100)*COMM AS CommissionLN FROM salespeople,
    ->  (SELECT SUM(AMT) AS SUM,SNUM FROM orders  WHERE SNUM IN(SELECT SNUM FROM salespeople WHERE CITY = 'London' OR CITY = 'New York') GROUP BY SNUM) AS s
    ->  WHERE salespeople.SNUM = s.SNUM) AS i ) AS c;
+--------------------+--------------------+
| TotalRL            | CommLN*5           |
+--------------------+--------------------+
| 18995.399841308594 | 11130.911907958984 |
+--------------------+--------------------+

106) Which are the date, order number, amt and city for each salesperson (by name) 
    for themaximum order he has obtained?

mysql> SELECT orders.SNUM, SNAME, ODATE, ONUM, MAX(AMT) AS AMT, customers.CITY
    -> FROM orders, salespeople, customers
    -> WHERE orders.SNUM = salespeople.SNUM
    -> AND customers.CNUM = orders.CNUM
    -> GROUP BY orders.SNUM;
+------+---------+------------+------+---------+---------+
| SNUM | SNAME   | ODATE      | ONUM | AMT     | CITY    |
+------+---------+------------+------+---------+---------+
| 1007 | Rifkin  | 1990-03-10 | 3001 | 1098.16 | SanJose |
| 1004 | Motika  | 1990-03-10 | 3002 |  1900.1 | Rome    |
| 1001 | Peel    | 1990-03-10 | 3003 | 9891.88 | London  |
| 1002 | Serres  | 1990-03-10 | 3005 | 5160.45 | SanJose |
| 1003 | AxelRod | 1990-04-10 | 3009 | 1713.23 | Rome    |
+------+---------+------------+------+---------+---------+

107) Which salesperson is having lowest commission?

mysql> SELECT SNUM, SNAME, COMM FROM  salespeople
    -> WHERE COMM = (SELECT MIN(COMM) FROM salespeople);
+------+---------+------+
| SNUM | SNAME   | COMM |
+------+---------+------+
| 1003 | AxelRod |   10 |
+------+---------+------+

